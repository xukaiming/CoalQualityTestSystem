// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "rmreportengine.h"

// Dispatch interfaces referenced by this interface
#include "rmreportpage.h"
#include "rmdialogpage.h"
#include "rmgridpage.h"
#include "RMCellPage.h"
#include "RMView.h"
#include "rmpreviewoptions.h"
#include "rmparser.h"
#include "rmsavereportoptions.h"

/////////////////////////////////////////////////////////////////////////////
// CRMReportEngine

IMPLEMENT_DYNCREATE(CRMReportEngine, CWnd)

/////////////////////////////////////////////////////////////////////////////
// CRMReportEngine properties

/////////////////////////////////////////////////////////////////////////////
// CRMReportEngine operations

void CRMReportEngine::Init(long aReportType)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xc9, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 aReportType);
}

void CRMReportEngine::AddAdoDataSet(LPCTSTR aDatasetName, LPDISPATCH aDataSet)
{
	static BYTE parms[] =
		VTS_BSTR VTS_DISPATCH;
	InvokeHelper(0xe7, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 aDatasetName, aDataSet);
}

void CRMReportEngine::ShowReport()
{
	InvokeHelper(0xcb, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CRMReportEngine::DesignReport()
{
	InvokeHelper(0xcc, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

BOOL CRMReportEngine::GetModifyPrepared()
{
	BOOL result;
	InvokeHelper(0xce, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CRMReportEngine::SetModifyPrepared(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xce, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

void CRMReportEngine::AddAdoDataSetRelation(LPCTSTR aMasterName, LPCTSTR aDetailName, LPCTSTR aRelation)
{
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_BSTR;
	InvokeHelper(0xe8, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 aMasterName, aDetailName, aRelation);
}

void CRMReportEngine::AddVariable(LPCTSTR aVarName, const VARIANT& aValue, BOOL aIsString)
{
	static BYTE parms[] =
		VTS_BSTR VTS_VARIANT VTS_BOOL;
	InvokeHelper(0xd0, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 aVarName, &aValue, aIsString);
}

void CRMReportEngine::PrintReport()
{
	InvokeHelper(0xd1, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

BOOL CRMReportEngine::GetShowPrintDialog()
{
	BOOL result;
	InvokeHelper(0xd2, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CRMReportEngine::SetShowPrintDialog(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xd2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

CString CRMReportEngine::GetFileName()
{
	CString result;
	InvokeHelper(0xd5, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CRMReportEngine::SetFileName(LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0xd5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 lpszNewValue);
}

BOOL CRMReportEngine::GetThreadPrepareReport()
{
	BOOL result;
	InvokeHelper(0xd6, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CRMReportEngine::SetThreadPrepareReport(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xd6, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

void CRMReportEngine::ExportToRtf(LPCTSTR aFileName)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0xd7, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 aFileName);
}

void CRMReportEngine::ExportToXls(LPCTSTR aFileName, BOOL aOleMode)
{
	static BYTE parms[] =
		VTS_BSTR VTS_BOOL;
	InvokeHelper(0xd8, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 aFileName, aOleMode);
}

void CRMReportEngine::ExportToHtml(LPCTSTR aFileName)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0xd9, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 aFileName);
}

void CRMReportEngine::ExportToPdf(LPCTSTR aFileName)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0xda, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 aFileName);
}

void CRMReportEngine::AddAdoDatabase(LPCTSTR aConnectionString, LPCTSTR aName)
{
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0xe6, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 aConnectionString, aName);
}

BOOL CRMReportEngine::GetLoginPrompt()
{
	BOOL result;
	InvokeHelper(0xdc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CRMReportEngine::SetLoginPrompt(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xdc, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

void CRMReportEngine::AddXmlDataSet(LPCTSTR aFileName, LPCTSTR aDatasetName, const VARIANT& aIsXmlData)
{
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_VARIANT;
	InvokeHelper(0xca, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 aFileName, aDatasetName, &aIsXmlData);
}

void CRMReportEngine::SetHandle(long aHandle)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xd4, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 aHandle);
}

void CRMReportEngine::LoadFromFile(LPCTSTR aFileName)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0xe2, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 aFileName);
}

void CRMReportEngine::SaveToFile(LPCTSTR aFileName)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0xe3, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 aFileName);
}

BOOL CRMReportEngine::GetShowProgress()
{
	BOOL result;
	InvokeHelper(0xe9, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CRMReportEngine::SetShowProgress(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xe9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

CRMReportPage CRMReportEngine::AddReportPage()
{
	LPDISPATCH pDispatch;
	InvokeHelper(0xcf, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, NULL);
	return CRMReportPage(pDispatch);
}

CRMDialogPage CRMReportEngine::AddDialogPage()
{
	LPDISPATCH pDispatch;
	InvokeHelper(0xd3, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, NULL);
	return CRMDialogPage(pDispatch);
}

CRMGridPage CRMReportEngine::AddGridPage()
{
	LPDISPATCH pDispatch;
	InvokeHelper(0xdb, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, NULL);
	return CRMGridPage(pDispatch);
}

CRMCellPage CRMReportEngine::AddCellPage()
{
	LPDISPATCH pDispatch;
	InvokeHelper(0xdd, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, NULL);
	return CRMCellPage(pDispatch);
}

void CRMReportEngine::NewReport()
{
	InvokeHelper(0xcd, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

CRMView CRMReportEngine::FindObject(LPCTSTR aObjectName)
{
	LPDISPATCH pDispatch;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0xde, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, parms,
		aObjectName);
	return CRMView(pDispatch);
}

void CRMReportEngine::DeletePage(long aPageIndex)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xdf, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 aPageIndex);
}

CRMPreviewOptions CRMReportEngine::GetPreviewOptions()
{
	LPDISPATCH pDispatch;
	InvokeHelper(0xe0, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&pDispatch, NULL);
	return CRMPreviewOptions(pDispatch);
}

void CRMReportEngine::SetReportFile(LPCTSTR aFileName)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0xe1, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 aFileName);
}

long CRMReportEngine::GetPageCount()
{
	long result;
	InvokeHelper(0xe4, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CRMReportEngine::LoadPreparedReportFromFile(LPCTSTR aFileName)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0xe5, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 aFileName);
}

void CRMReportEngine::SavePreparedReportToFile(LPCTSTR aFileName)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0xea, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 aFileName);
}

void CRMReportEngine::LoadReportFromStream(LPUNKNOWN aStream)
{
	static BYTE parms[] =
		VTS_UNKNOWN;
	InvokeHelper(0xeb, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 aStream);
}

void CRMReportEngine::SaveReportToStream(LPUNKNOWN aStream)
{
	static BYTE parms[] =
		VTS_UNKNOWN;
	InvokeHelper(0xec, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 aStream);
}

CString CRMReportEngine::GetScriptText()
{
	CString result;
	InvokeHelper(0xed, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CRMReportEngine::SetScriptText(LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0xed, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 lpszNewValue);
}

void CRMReportEngine::AddFunction(LPCTSTR aFuncName, LPCTSTR aCategory, LPCTSTR aDescription, LPCTSTR aParams)
{
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_BSTR VTS_BSTR;
	InvokeHelper(0xee, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 aFuncName, aCategory, aDescription, aParams);
}

CRMParser CRMReportEngine::GetParser()
{
	LPDISPATCH pDispatch;
	InvokeHelper(0xf0, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&pDispatch, NULL);
	return CRMParser(pDispatch);
}

VARIANT CRMReportEngine::Get_Variable(LPCTSTR aName)
{
	VARIANT result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0xef, DISPATCH_METHOD, VT_VARIANT, (void*)&result, parms,
		aName);
	return result;
}

void CRMReportEngine::Set_Variable(LPCTSTR aName, const VARIANT& Value)
{
	static BYTE parms[] =
		VTS_BSTR VTS_VARIANT;
	InvokeHelper(0xf1, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 aName, &Value);
}

VARIANT CRMReportEngine::GetReportData()
{
	VARIANT result;
	InvokeHelper(0xf2, DISPATCH_PROPERTYGET, VT_VARIANT, (void*)&result, NULL);
	return result;
}

void CRMReportEngine::SetReportData(const VARIANT& newValue)
{
	static BYTE parms[] =
		VTS_VARIANT;
	InvokeHelper(0xf2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 &newValue);
}

CRMSaveReportOptions CRMReportEngine::GetSaveReportOptions()
{
	LPDISPATCH pDispatch;
	InvokeHelper(0xf3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&pDispatch, NULL);
	return CRMSaveReportOptions(pDispatch);
}

VARIANT CRMReportEngine::GetDelphiObject()
{
	VARIANT result;
	InvokeHelper(0xf4, DISPATCH_PROPERTYGET, VT_VARIANT, (void*)&result, NULL);
	return result;
}

BOOL CRMReportEngine::PrepareReport()
{
	BOOL result;
	InvokeHelper(0xf5, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CRMReportEngine::GetShowDialogBeforeExport()
{
	BOOL result;
	InvokeHelper(0xf6, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CRMReportEngine::SetShowDialogBeforeExport(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xf6, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

void CRMReportEngine::SetDataSetAlias(LPCTSTR aDatasetName, LPCTSTR aAliasName)
{
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0xf7, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 aDatasetName, aAliasName);
}

BOOL CRMReportEngine::GetUseInVFP()
{
	BOOL result;
	InvokeHelper(0xf8, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CRMReportEngine::SetUseInVFP(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xf8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}
